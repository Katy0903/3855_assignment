openapi: 3.0.0
info:
  version: 1.0.0
  title: ClientCareCenter
  description: It is for a global client care center of a large organization that helps the management team analyze the performance from customer service cases and the survey.
paths:
  /ccc/clientcase:
    # post:
    #   summary: client case report
    #   tags: []
    #   responses:
    #     '201':
    #       description: Case created
    #     '400':
    #       description: Something invalid
    #   operationId: app.post_clientcase
    #   requestBody:
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/ClientCase'
    #     description: client case report to add
    #   description: add a new client case report
    get:
      summary: Get new client cases within timestamp range
      tags: []
      operationId: app.get_clientcase_by_timestamp
      description: Gets client cases added after a timestamp
      parameters:
        - name: start_timestamp
          in: query
          description: Start timestamp for client cases
          required: true
          schema:
            type: string
            format: date-time
            example: '2016-08-29T09:12:33.001Z'
        - name: end_timestamp
          in: query
          description: End timestamp for client cases
          required: true
          schema:
            type: string
            format: date-time
            example: '2016-08-29T10:12:33.001Z'
      responses:
        '200':
          description: Successfully returned a list of client case events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientCase'
    parameters: []
  /ccc/survey:
    # post:
    #   summary: survey report
    #   tags: []
    #   responses:
    #     '201':
    #       description: survey created
    #     '400':
    #       description: Something invalid
    #   operationId: app.post_survey
    #   requestBody:
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/Survey'
    #     description: survey case report to add
    #   description: add a new survey report
    get:
      summary: Get surveys within timestamp range
      tags: []
      operationId: app.get_survey_by_timestamp
      description: Gets surveys completed after a timestamp
      parameters:
        - name: start_timestamp
          in: query
          description: Start timestamp for surveys
          required: true
          schema:
            type: string
            format: date-time
            example: '2016-08-29T09:12:33.001Z'
        - name: end_timestamp
          in: query
          description: End timestamp for surveys
          required: true
          schema:
            type: string
            format: date-time
            example: '2016-08-29T10:12:33.001Z'
      responses:
        '200':
          description: Successfully returned a list of survey records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Survey'
    parameters: []
  /ccc/stats:
    get:
      summary: Get the counts of each event type in the database
      operationId: app.get_event_counts
      responses:
        '200':
          description: Successfully returned event counts
          content:
            application/json:
              schema:
                type: object
                properties:
                  count_clientcase:
                    type: integer
                    description: Count of client case records
                  count_survey:
                    type: integer
                    description: Count of survey records
  /ccc/stats/ids:
    get:
      summary: Get event IDs and trace IDs from the database
      operationId: app.get_event_ids_and_trace_ids
      responses:
        '200':
          description: Successfully returned event IDs and trace IDs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    event_id:
                      type: string
                      description: Unique event ID
                    trace_id:
                      type: string
                      description: Unique trace ID
                    type:
                      type: string
                      description: Event type (clientcase or survey)
components:
  schemas:
    ClientCase:
      title: ClientCase
      type: object
      required:
        - case_id
        - client_id
        - timestamp
        - conversation_time_in_min
        - trace_id
      properties:
        case_id:
          type: string
          description: unique id for each case
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        client_id:
          type: string
          description: unique id for each client
          example: d290f1ee-6c54-4b01-90e6-d701748f0853
          format: uuid
        timestamp:
          type: string
          description: time when the case was created
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        conversation_time_in_min:
          type: number
          description: time spent on the conversation in minutes
          format: float
          example: 5
        trace_id:
          type: string
          description: tracking the event from recevier
          format: uuid
    Survey:
      title: Survey
      type: object
      required:
        - survey_id
        - client_id
        - timestamp
        - satisfaction
        - trace_id
      properties:
        survey_id:
          type: string
          description: unique id for each survey
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0852
        client_id:
          type: string
          description: unique id for each client
          example: d290f1ee-6c54-4b01-90e6-d701748f0854
          format: uuid
        timestamp:
          type: string
          description: time when the survey was completed and submitted
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        satisfaction:
          type: integer
          description: satisfaction level of the conversation
          example: 10
          minimum: 0
          maximum: 10
        trace_id:
          type: string
          description: tracking the event from recevier
          format: uuid